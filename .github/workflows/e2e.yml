name: Run e2e tests
on:
  pull_request_target:
    types: [labeled, synchronize]
  push:
    branches:
      - master  
    tags: "*"
  workflow_dispatch:
    inputs: 
      test_list:
        description: Space separated list of e2e tests to trigger. Leave it empty to run all tests
        default: ""
jobs:
  e2e:
    name: E2E testing
    runs-on: ubuntu-latest
    timeout-minutes: 120
    if: "github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request_target' && contains(github.event.pull_request.labels.*.name, 'ok to test'))"
    env:
      BATS_TESTS: ${{ github.event.inputs.test_list }}
      IMG: quay.io/rht_perf_ci/benchmark-operator:e2e
    steps:

    - name: Check out code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
      if: github.event_name == 'pull_request_target'

    - name: Check out code
      uses: actions/checkout@v2
      if: "github.event_name == 'workflow_dispatch' || github.event_name == 'push'"

    - name: Install bats
      run: make install-bats

    - name: Authenticate against OCP cluster
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
        openshift_username: ${{ secrets.OPENSHIFT_USER }}
        openshift_password: ${{ secrets.OPENSHIFT_PASSWORD }}
        insecure_skip_tls_verify: true

    - name: Login in quay
      run: podman login quay.io -u ${QUAY_USER} -p ${QUAY_TOKEN}
      env:
        QUAY_USER: ${{ secrets.QUAY_USER }}
        QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}

    - name: Build, push and deploy benchmark-operator
      run: make image-build image-push deploy

    - name: Execute e2e tests
      run: make e2e-tests

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: benchmark-operator-debug-${{ github.run_id }}
        path: e2e/artifacts

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v2.4.3
      if: always() # always run even if the previous step fails
      with:
        report_paths: e2e/report.xml
