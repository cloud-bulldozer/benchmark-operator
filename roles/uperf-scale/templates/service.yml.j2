---
{% set control_port = 30000 %}
{% set counter = {
    'counter': 0,
    } 
%}
{% macro increment(dct, key, inc=1)%}
    {% if dct.update({key: dct[key] + inc}) %} {% endif %}
{% endmacro %}
apiVersion: v1
kind: List
metadata: {}
items:
{% macro job_template(item, node_idx_item='') %}
  - kind: Service
    apiVersion: v1
    metadata:
{% if (worker_node_list[node_idx_item]|length>27) and (worker_node_list[node_idx_item][26] == '.') %}
      name: uperf-scale-service-{{worker_node_list[node_idx_item] | truncate(26,true,'') | replace('.','-')}}-{{ item }}-{{ trunc_uuid }}
{% else %}
      name: uperf-scale-service-{{worker_node_list[node_idx_item] | truncate(27,true,'') | replace('.','-')}}-{{ item }}-{{ trunc_uuid }}
{% endif %}
      namespace: '{{ operator_namespace }}'
      labels:
        benchmark-uuid: {{ uuid }}
        benchmark-operator-workload: uperf-scale
{% if (workload_args.serviceip is defined and workload_args.serviceip and ( workload_args.servicetype | default("clusterip") == "nodeport" )) %}
        index: "{{ counter["counter"] }}"
{% set port_index = counter["counter"] %}
{{ increment(counter, 'counter') }}
{% else %}
{% set port_index = item %}
        index: "{{ item }}"
{% endif %}
{% if (worker_node_list[node_idx_item]|length>27) and (worker_node_list[node_idx_item][26] == '.') %}
        app: uperf-scale-bench-server-{{ worker_node_list[node_idx_item] | truncate(26,true,'')}}-{{ item }}-{{ trunc_uuid }}
{% else %}
        app: uperf-scale-bench-server-{{ worker_node_list[node_idx_item] | truncate(27,true,'')}}-{{ item }}-{{ trunc_uuid }}
{% endif %}
        type: {{ ansible_operator_meta.name }}-bench-server-{{ trunc_uuid }}
      annotations:
        node_idx: '{{ node_idx_item }}'
        pod_idx: '{{ item }}'
    spec:
      selector:
{% if (worker_node_list[node_idx_item]|length>27) and (worker_node_list[node_idx_item][26] == '.') %}
        app: uperf-scale-bench-server-{{worker_node_list[node_idx_item] | truncate(26,true,'')}}-{{ item }}-{{ trunc_uuid }}
{% else %}
        app: uperf-scale-bench-server-{{worker_node_list[node_idx_item] | truncate(27,true,'')}}-{{ item }}-{{ trunc_uuid }}
{% endif %}
{% if workload_args.servicetype | default("clusterip") == "nodeport" %}
      type: NodePort
      ports:
      - name: uperf-scale
        port: {{ control_port|int + port_index * 100 }}
        targetPort: {{ control_port|int + port_index * 100 }}
        nodePort: {{ control_port|int + port_index * 100 }} 
        protocol: TCP
{% for num in range(1,12,1) %}
      - name: uperf-scale-control-tcp-{{ control_port|int + port_index * 100 + num }}
        port: {{ control_port|int + port_index * 100 + num }}
        targetPort: {{ control_port|int + port_index * 100 + num }}
        nodePort: {{ control_port|int + port_index * 100 + num }}
        protocol: TCP
      - name: uperf-scale-control-udp-{{ control_port|int + port_index * 100 + num }}
        port: {{ control_port|int + port_index * 100 + num }}
        targetPort: {{ control_port|int + port_index * 100 + num }}
        nodePort: {{ control_port|int + port_index * 100 + num }}
        protocol: UDP
{% endfor %}
{% else %}
      type: ClusterIP
      ports:
      - name: uperf-scale
        port: 30000
        targetPort: 30000
        protocol: TCP
{% for num in range(30001,30012,1) %}
      - name: uperf-scale-control-tcp-{{num}}
        port: {{num}}
        targetPort: {{num}}
        protocol: TCP
      - name: uperf-scale-control-udp-{{num}}
        port: {{num}}
        targetPort: {{num}}
        protocol: UDP
{% endfor %}
{% endif %}
{% endmacro %}
{% for node_idx_item in range(node_sequence|int)  %}
{% for item in range(pod_sequence|int)  %}
{{ job_template(item,node_idx_item) }}
{% endfor %}
{% endfor %}
