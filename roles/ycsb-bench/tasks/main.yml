---
- name: setting ycsb_workload var
  set_fact:
    ycsb_workload: "{{ item }}"

- name: Generate workloads
  k8s:
    definition: "{{ lookup('template', 'configmap.yml.j2') | from_yaml }}"

- name: Run YCSB Workload
  k8s:
    definition:
      kind: Job
      apiVersion: batch/v1
      metadata:
        name: 'ycsb-bench-job-{{ ycsb_workload }}-{{ trunc_uuid }}'
        namespace: '{{ operator_namespace }}'
      spec:
        template:
          metadata:
            name: '{{ meta.name }}-ycsb-bench'
            namespace: '{{ operator_namespace }}'
            labels:
              name: 'ycsb-run-{{ trunc_uuid }}'
          spec:
            containers:
            - name: ycsb
              image: "quay.io/cloud-bulldozer/ycsb-server:latest"
              imagePullPolicy: Always
              env:
              - name: clustername
                value: "{{ clustername }}"
              - name: es
                value: "{{elasticsearch.server | default()}}"
              - name: es_port
                value: "{{elasticsearch.port | default()}}"
              - name: user
                value: "{{test_user | default()}}"
              - name: workload
                value: "{{ycsb_workload}}"
              - name: num_records
                value: "{{ycsb.recordcount}}"
              - name: num_operations
                value: "{{ycsb.operationcount}}"
              - name: uuid
                value: "{{uuid}}"
              imagePullPolicy: Always
              command: ["/bin/sh"]
              args: ["-c", "/opt/snafu/ycsb-wrapper/ycsb-wrapper.py -r 1 -d {{ ycsb.driver }} -w {{ ycsb_workload }} -x \"{{ ycsb.options_load }}\""]
              volumeMounts:
                - name: config-volume
                  mountPath: "/tmp/ycsb"
            restartPolicy: Never
            volumes:
              - name: config-volume
                configMap:
                  name: ycsb-test-{{ trunc_uuid }}
        backoffLimit: 4

- name: Wait for YCSB Workload Job to Succeed...
  k8s_facts:
    kind: Job
    api_version: batch/v1
    name: 'ycsb-bench-job-{{ ycsb_workload }}-{{ trunc_uuid }}'
    namespace: "{{ operator_namespace }}"
    label_selectors:
      - name = 'ycsb-run-{{ trunc_uuid }}'
  register: ycsb_bench
  until: "ycsb_bench | json_query('resources[].status.succeeded')"
  retries: 1000
  delay: 20
