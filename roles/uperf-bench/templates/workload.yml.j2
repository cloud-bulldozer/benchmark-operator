---
kind: Job
apiVersion: batch/v1
metadata:
{% if uperf.serviceip is sameas true %}
  name: 'uperf-client-{{item.spec.clusterIP}}-{{ trunc_uuid }}'
{% else %}
  name: 'uperf-client-{{item.status.podIP}}-{{ trunc_uuid }}'
{% endif %}
  namespace: '{{ operator_namespace }}'
spec:
  template:
    metadata:
      labels:
        app: uperf-bench-client-{{ trunc_uuid }}
{% if uperf.multus.enabled is sameas true %}
      annotations:
        k8s.v1.cni.cncf.io/networks: {{ uperf.multus.client }}
{% endif %}
    spec:
{% if uperf.hostnetwork is sameas true %}
      hostNetwork : true
      serviceAccountName: benchmark-operator
      serviceAccount: benchmark-operator
{% endif %}
      containers:
      - name: benchmark
        image: "quay.io/cloud-bulldozer/uperf:latest"
        wait: true
        command: ["/bin/sh", "-c"]
        args:
{% if uperf.serviceip is sameas true %}
          - "export serviceip=true;
            export h={{item.spec.clusterIP}};
{% else %}
{% if uperf.multus.client is defined %}
          - "export h={{ (item['metadata']['annotations']['k8s.v1.cni.cncf.io/networks-status'] | from_json)[1]['ips'][0] }};
{% else %}
          - "export h={{item.status.podIP}};
{% endif %}
{% endif %}
{% if elasticsearch is defined %}
{% if elasticsearch.server is defined %}
             export es={{elasticsearch.server}};
             export es_port={{elasticsearch.port}};
             export uuid={{uuid}};
{% endif %}
{% endif %}
{% if test_user is defined %}
             export test_user={{test_user}};
{% endif %}
             export clustername={{clustername}};
             export hostnet={{uperf.hostnetwork}};
             export ips=$(hostname -I);
             while true; do
               if [[ $(redis-cli -h {{bo.resources[0].status.podIP}} get start) =~ 'true' ]]; then
{% for test in uperf.test_types %}
{% for proto in uperf.protos %}
{% for size in uperf.sizes %}
{% for nthr in uperf.nthrs %}
                 cat /tmp/uperf-test/uperf-{{test}}-{{proto}}-{{size}}-{{nthr}};
                 for i in `seq 1 {{uperf.samples}}`; do
                   python /opt/snafu/uperf-wrapper/uperf-wrapper.py -w /tmp/uperf-test/uperf-{{test}}-{{proto}}-{{size}}-{{nthr}} -r $i;
                 done;
{% endfor %}
{% endfor %}
{% endfor %}
{% endfor %}
               else
                 continue;
               fi;
               break;
             done;
             redis-cli -h {{bo.resources[0].status.podIP}} set start false"
        volumeMounts:
          - name: config-volume
            mountPath: "/tmp/uperf-test"
      volumes:
        - name: config-volume
          configMap:
            name: uperf-test-{{ trunc_uuid }}
      restartPolicy: OnFailure
{% if uperf.pin is sameas true %}
      nodeSelector:
          kubernetes.io/hostname: '{{ uperf.pin_client }}'
{% endif %}
