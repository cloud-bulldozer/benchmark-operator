---
kind: Pod
apiVersion: v1
metadata:
  name: 'uperf-server-{{ item }}-{{ trunc_uuid }}'
  namespace: '{{ operator_namespace }}'
  labels:
    app : uperf-bench-server-{{item}}-{{ trunc_uuid }}
    type : uperf-bench-server-{{ trunc_uuid }}
{% if uperf.multus.enabled is sameas true %}
  annotations:
    k8s.v1.cni.cncf.io/networks: {{ uperf.multus.server}}
{% endif %}
spec:
{% if uperf.hostnetwork is sameas true %}
  hostNetwork : true
{% endif %}
  containers:
  - name: benchmark
    image: {{ uperf.image | default('quay.io/cloud-bulldozer/uperf@sha256:59327279536f345f10d6fc4acfc121e596e93e983dc16e3ab0cf84add669a7b4') }}
{% if uperf.server_resources is defined %}
    resources: {{ uperf.server_resources | to_json }}
{% endif %}
    imagePullPolicy: Always
    wait: true
    command: ["/bin/sh","-c"]
    args: ["uperf -s -v -P 20000"]
  restartPolicy: OnFailure
{% if uperf.pin is sameas true %}
  nodeSelector:
    kubernetes.io/hostname: '{{ uperf.pin_server }}'
{% endif %}
{% if uperf.serviceip is sameas true %}
  securityContext:
    sysctls:
    - name: net.ipv4.ip_local_port_range
      value: 20000 20011
{% endif %}
{% if metadata is defined and metadata.collection|default(false) is sameas true and metadata.targeted|default(true) is sameas true %}
  initContainers:
  - name: backpack-{{ trunc_uuid }}
    image: {{ metadata_image | default('quay.io/cloud-bulldozer/backpack@sha256:a39d536850142075a4a461bb2c978615072080ff1e9a91a64a542a87648b5e18') }}
    command: ["/bin/sh", "-c"]
{% if metadata is defined and metadata.force|default(false) is sameas true %}
    args: ["python3 stockpile-wrapper.py -s {{ elasticsearch.server }} -p {{ elasticsearch.port }} -u {{ uuid }} -n $my_node_name -N $my_pod_name --redisip {{ bo.resources[0].status.podIP }} --redisport 6379 --force"]
{% else %}
    args: ["python3 stockpile-wrapper.py -s {{ elasticsearch.server }} -p {{ elasticsearch.port }} -u {{ uuid }} -n $my_node_name -N $my_pod_name --redisip {{ bo.resources[0].status.podIP }} --redisport 6379"]
{% endif %}
    imagePullPolicy: Always
    wait: true
    securityContext:
      privileged: {{ metadata.privileged | default(false) | bool }}
    env:
      - name: my_node_name
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName
      - name: my_pod_name
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
  serviceAccountName: {{ metadata.serviceaccount | default('default') }}
{% endif %}
