---
kind: Pod
apiVersion: v1
metadata:
  name: 'iperf3-server-{{ item }}-{{ trunc_uuid }}'
  namespace: '{{ operator_namespace }}'
  labels:
    app : iperf3-bench-server-{{ trunc_uuid }}
spec:
{% if iperf3.hostnetwork is defined %}
{% if iperf3.hostnetwork %}
  hostNetwork : true
{% endif %}
{% endif %}
  containers:
  - name: benchmark
    image: "quay.io/cloud-bulldozer/iperf3:0.0.2"
    imagePullPolicy: Always
    wait: true
    command: ["/bin/sh", "-c"]
    args:
      - "iperf3 -s -p {{ iperf3.port }} {{ iperf3.extra_options_server }}"
  restartPolicy: OnFailure
{% if iperf3.pin_server is defined %}
  nodeSelector:
    kubernetes.io/hostname: '{{ iperf3.pin_server }}'
{% endif %}
{% if metadata_collection|default(false) is sameas true and metadata_targeted|default(true) is sameas true %}
  initContainers:
  - name: backpack-{{ trunc_uuid }}
    image: quay.io/cloud-bulldozer/backpack:latest
    command: ["/bin/sh", "-c"]
    args: ["python3 stockpile-wrapper.py -s {{ elasticsearch.server }} -p {{ elasticsearch.port }} -u {{ uuid }} -n $my_node_name -N $my_pod_name"]
    imagePullPolicy: Always
    wait: true
    securityContext:
      privileged: {{ metadata_privileged | default(false) | bool }}
    env:
      - name: my_node_name
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName
      - name: my_pod_name
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
  serviceAccountName: {{ metadata_sa | default('default') }}
{% endif %}
