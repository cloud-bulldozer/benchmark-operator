---
- name: Get current state
  k8s_facts:
    api_version: ripsaw.cloudbulldozer.io/v1alpha1
    kind: Benchmark
    name: '{{ meta.name }}'
    namespace: '{{ operator_namespace }}'
  register: resource_state

- k8s_status:
    api_version: ripsaw.cloudbulldozer.io/v1alpha1
    kind: Benchmark
    name: "{{ meta.name }}"
    namespace: "{{ operator_namespace }}"
    status:
      state: Starting
      complete: false
  when: resource_state.resources[0].status.state is not defined

- name: Update current state
  k8s_facts:
    api_version: ripsaw.cloudbulldozer.io/v1alpha1
    kind: Benchmark
    name: '{{ meta.name }}'
    namespace: '{{ operator_namespace }}'
  register: resource_state

- block:

  - name: Start Server(s)
    k8s:
      definition: "{{ lookup('template', 'server.yml.j2') | from_yaml }}"
    with_sequence: start=1 count={{ iperf3.pairs }}

  - name: Wait for pods to be running....
    k8s_facts:
      kind: Pod
      api_version: v1
      namespace: '{{ operator_namespace }}'
      label_selectors:
        - app = iperf3-bench-server-{{ trunc_uuid }}
    register: server_pods
    until: "iperf3.pairs == (server_pods | json_query('resources[].status.podIP')|length)"
    retries: 40
    delay: 10

  - name: Start Client(s)
    k8s:
      definition: "{{ lookup('template', 'client.yml.j2') | from_yaml }}"
    with_items: "{{ server_pods.resources }}"
    when: server_pods.resources|length > 0

  - name: Wait for pods to be running....
    k8s_facts:
      kind: Pod
      api_version: v1
      namespace: '{{ operator_namespace }}'
      label_selectors:
        - app = iperf3-bench-client-{{ trunc_uuid }}
    register: client_pods

  - k8s_status:
      api_version: ripsaw.cloudbulldozer.io/v1alpha1
      kind: Benchmark
      name: "{{ meta.name }}"
      namespace: "{{ operator_namespace }}"
      status:
        state: Running
        complete: false
    when: client_pods.resources|length > 0

  when: ( iperf3.pairs > 0 ) and resource_state.resources[0].status.state == "Starting"

- block:
  - name: Waiting for Jobs to complete....
    k8s_facts:
      kind: Job
      api_version: v1
      namespace: '{{ operator_namespace }}'
      label_selectors:
        - app = iperf3-bench-client-{{ trunc_uuid }}
    register: client_jobs

  - k8s_status:
      api_version: ripsaw.cloudbulldozer.io/v1alpha1
      kind: Benchmark
      name: "{{ meta.name }}"
      namespace: "{{ operator_namespace }}"
      status:
        state: Complete
        complete: true
    when: "iperf3.pairs == (client_jobs | json_query('resources[].status.succeeded')|length)"

  when: resource_state.resources[0].status.state == "Running"
