---
- block:
  - name: template sysbench script
    k8s:
      definition:
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: 'sysbench-config-{{ trunc_uuid }}'
          namespace: '{{ operator_namespace }}'
        data:
          sysbenchScript: "{{ lookup('template', 'sysbench.sh.j2') }}"
  - name: Create PVC
    k8s:
      definition:
        kind: PersistentVolumeClaim
        apiVersion: v1
        metadata:
          name: "claim-sysbench-{{ trunc_uuid }}"
          namespace: '{{ operator_namespace }}'
          annotations:
             volume.beta.kubernetes.io/storage-class: "{{ workload_args.storageclass }}"
        spec:
          accessModes:
            - "{{ workload_args.pvcaccessmode | default('ReadWriteOnce') }}"
          volumeMode: "{{ workload_args.pvcvolumemode | default('Filesystem') }}"
          resources:
            requests:
              storage: "{{ workload_args.storagesize }}"
    when: workload_args.storageclass is defined

  - name: Start sysbench job
    k8s:
      state: present
      definition: "{{ lookup('template', 'workload.yml') | from_yaml }}"
    when: workload_args.kind is not defined

  - name: Start sysbench vm job
    k8s:
      state: present
      definition: "{{ lookup('template', 'workload_vm.yml') | from_yaml }}"
    when:  workload_args.kind is defined and workload_args.kind == "vm"

  - include_role:
      name: benchmark_state
      tasks_from: set_state
    vars:
      state: Running

  when: benchmark_state.resources[0].status.state == "Building"

- include_role:
    name: benchmark_state
    tasks_from: completed.yml
  when: benchmark_state.resources[0].status.state == "Running"
