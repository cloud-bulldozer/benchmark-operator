---

apiVersion: batch/v1
kind: "job"
metadata:
  name: "sysbench-{{ trunc_uuid }}"
  namespace: "{{ operator_namespace }}"
spec:
  backoffLimit: 0
  activeDeadlineSeconds: {{ workload_args.job_timeout|default(3600) }}
  template:
    metadata:
      labels:
       app: sysbench-{{ trunc_uuid }}
       benchmark-uuid: {{ uuid }}
{% if workload_args.annotations is defined %}
      annotations:
{% for annotation, value in workload_args.annotations.items() %}
        "{{annotation}}": "{{value}}"
{% endfor %}
{% endif %}
    spec:
{% if workload_args.pin_node is defined %}
      nodeSelector:
        kubernetes.io/hostname: '{{ workload_args.pin_node }}'
{% endif %}
{% if workload_args.runtime_class is defined %}
      runtimeClassName: "{{ workload_args.runtime_class }}"
{% endif %}
      containers:
      - name: sysbench
        command: ["/bin/sh", "-c"]
        args: ["cd /opt/sysbench && /tmp/sysbenchScript"]
        image: {{ workload_args.image | default('quay.io/cloud-bulldozer/sysbench:latest') }}
        imagePullPolicy: Always
        volumeMounts:
        - name: sysbench-volume
          mountPath: "/tmp/"
        - name: sysbench-runtime
          mountPath: "/opt/sysbench"
      volumes:
      - name: sysbench-runtime
{% if workload_args.storageclass is defined %}
        persistentVolumeClaim:
          claimName: claim-sysbench-{{ trunc_uuid }}
{% else %}
        emptyDir: {}
{% endif %}
      - name: sysbench-volume
        configMap:
          name: "sysbench-config-{{ trunc_uuid }}"
          defaultMode: 0777
      restartPolicy: Never
{% include "metadata.yml.j2" %}
