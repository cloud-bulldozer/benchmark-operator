---

- name: Get current state
  k8s_info:
    api_version: ripsaw.cloudbulldozer.io/v1alpha1
    kind: Benchmark
    name: '{{ ansible_operator_meta.name }}'
    namespace: '{{ operator_namespace }}'
  register: resource_state

- operator_sdk.util.k8s_status:
    api_version: ripsaw.cloudbulldozer.io/v1alpha1
    kind: Benchmark
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ operator_namespace }}"
    status:
      state: Building
      complete: false
  when: resource_state.resources[0].status.state is not defined

- name: Get current state - If it has changed
  k8s_info:
    api_version: ripsaw.cloudbulldozer.io/v1alpha1
    kind: Benchmark
    name: '{{ ansible_operator_meta.name }}'
    namespace: '{{ operator_namespace }}'
  register: resource_state

- name: Capture operator information
  k8s_info:
    kind: Pod
    api_version: v1
    namespace: '{{ operator_namespace }}'
    label_selectors:
      - name = benchmark-operator
  register: bo

- block:
  - name: Create targets configmap
    k8s:
      definition: "{{ lookup('template', 'targets.yml.j2') | from_yaml }}"

  - name: Create vegeta clients
    k8s:
      definition: "{{ lookup('template', 'vegeta.yml.j2') | from_yaml }}"
    loop: "{{ range(0, workload_args.clients|default(1)|int)|list }}"

  - name: Update resource state
    operator_sdk.util.k8s_status:
      api_version: ripsaw.cloudbulldozer.io/v1alpha1
      kind: Benchmark
      name: "{{ ansible_operator_meta.name }}"
      namespace: "{{ operator_namespace }}"
      status:
        state: Running

  when: resource_state.resources[0].status.state == "Building"

- block:

  - name: Waiting for pods to complete....
    k8s_info:
      kind: pod
      api_version: v1
      namespace: '{{ operator_namespace }}'
      label_selectors:
        - app = vegeta-benchmark-{{ trunc_uuid }}
      field_selectors:
        - status.phase=Succeeded
    register: client_pods

  - operator_sdk.util.k8s_status:
      api_version: ripsaw.cloudbulldozer.io/v1alpha1
      kind: Benchmark
      name: "{{ ansible_operator_meta.name }}"
      namespace: "{{ operator_namespace }}"
      status:
        state: Complete
        complete: true
    when: workload_args.clients|default(1)|int == client_pods.resources|length

  when: resource_state.resources[0].status.state == "Running"
