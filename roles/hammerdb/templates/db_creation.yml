---
apiVersion: batch/v1
kind: "job"
metadata:
  name: "{{ meta.name }}-workload-{{ trunc_uuid }}"
  namespace: "{{ operator_namespace }}"
spec:
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app: hammerdb_workload-{{ trunc_uuid }}
    spec:
      containers:
      - name: hammerdb
        image: {{ workload_args.image | default('quay.io/cloud-bulldozer/hammerdb:master') }}
        imagePullPolicy: Always
        env:
          - name: uuid
            value: "{{ uuid }}"
          - name: test_user
            value: "{{ test_user | default("ripsaw") }}"
          - name: clustername
            value: "{{ clustername }}"
{% if elasticsearch is defined %}
          - name: es
            value: "{{ elasticsearch.server }}"
          - name: es_port
            value: "{{ elasticsearch.port }}"
          - name: es_index
            value: "{{ elasticsearch.index_name | default("ripsaw-hammerdb") }}"
          - name: parallel
            value: "{{ elasticsearch.parallel | default("false") }}"
{% endif %}
{% if prometheus is defined %}
          - name: prom_es
            value: "{{ prometheus.server }}"
          - name: prom_port
            value: "{{ prometheus.port }}"
          - name: prom_parallel
            value: "{{ prometheus.parallel | default("false") }}"
          - name: prom_token
            value: "{{ prometheus.prom_token | default() }}"
          - name: prom_url
            value: "{{ prometheus.prom_url | default() }}"
{% endif %}
        command: ["/bin/sh", "-c"]
        args: 
          - "/usr/local/bin/uid_entrypoint; 
             export db_server={{workload_args.db_server}};
             export db_port={{workload_args.db_port}};
             export db_warehouses={{workload_args.db_warehouses}};
             export db_num_workers={{workload_args.db_num_workers}};
             export db_tcp={{workload_args.db_tcp}};
             export db_user={{workload_args.db_user}};
             export transactions={{workload_args.transactions}};
             export test_type={{workload_args.test_type}};
             export runtime={{workload_args.runtime}};
             export rampup={{workload_args.rampup}};
             export samples={{workload_args.samples}};
             export timed_test={{workload_args.timed_test}};
             cd /hammer;
             run_snafu --tool hammerdb -u {{ uuid }}"
        volumeMounts:
        - name: hammerdb-workload-volume
          mountPath: "/workload"
          readOnly: false
      volumes:
      - name: hammerdb-workload-volume
        configMap:
          name: "{{ meta.name }}-workload-{{ trunc_uuid }}"
          defaultMode: 0640
      restartPolicy: OnFailure
{% include "metadata.yml.j2" %}
