{% if elasticsearch is defined %}
{% if elasticsearch.url is defined %}
export es={{ elasticsearch.url }};
export es_index={{ elasticsearch.index_name | default("ripsaw-hammerdb") }};
export es_verify_cert={{ elasticsearch.verify_cert | default("true") }};
export parallel={{ elasticsearch.parallel | default("false") }};
export uuid={{uuid}};
{% endif %}
{% endif %}
{% if workload_args.client_vm.network.multiqueue.enabled %}
dnf install -y ethtool;
ethtool -L eth0 combined {{ workload_args.client_vm.network.multiqueue.queues }};
{% endif %}
dnf install -y epel-release git python3-pip;
pip3 install git+https://github.com/cloud-bulldozer/benchmark-wrapper;
export db_type={{workload_args.db_type}};
export timed_test={{workload_args.timed_test}};
export db_server={{workload_args.db_server}};
export db_port={{workload_args.db_port}};
export db_warehouses={{workload_args.db_warehouses}};
export db_num_workers={{workload_args.db_num_workers}};
export db_user={{workload_args.db_user}};
export transactions={{workload_args.transactions}};
export raiseerror={{workload_args.raiseerror}};
export keyandthink={{workload_args.keyandthink}};
export db_driver={{workload_args.driver}};
export rampup={{workload_args.rampup}};
export runtime={{workload_args.runtime}};
export allwarehouse={{workload_args.allwarehouse}};
export timeprofile={{workload_args.timeprofile}};
export async_scale={{workload_args.async_scale}};
export async_client={{workload_args.async_client}};
export async_verbose={{workload_args.async_verbose}};
export async_delay={{workload_args.async_delay}};
export samples={{workload_args.samples}};
export db_mssql_tcp={{workload_args.db_mssql_tcp}};
export db_mssql_azure={{workload_args.db_mssql_azure}};
export db_mssql_authentication={{workload_args.db_mssql_authentication}};
export db_mssql_linux_authent={{workload_args.db_mssql_linux_authent}};
export db_mssql_odbc_driver='{{workload_args.db_mssql_odbc_driver}}';
export db_mssql_linux_odbc='{{workload_args.db_mssql_linux_odbc}}';
export db_mssql_imdb={{workload_args.db_mssql_imdb}};
export db_mssql_bucket={{workload_args.db_mssql_bucket}};
export db_mssql_durability={{workload_args.db_mssql_durability}};
export db_mssql_checkpoint={{workload_args.db_mssql_checkpoint}};
export HOME=/root;
cd /hammer;
./hammerdbcli auto /creator/createdb.tcl;
redis-cli set db-creation-{{trunc_uuid}} true;
run_snafu --tool hammerdb -u {{ uuid }};
redis-cli set complete true;
