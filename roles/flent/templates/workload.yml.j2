---
kind: Job
apiVersion: batch/v1
metadata:
  name: 'flent-bench-client-{{item.status.podIP}}-{{ trunc_uuid }}'
  namespace: '{{ operator_namespace }}'
spec:
  template:
    metadata:
      labels:
        app: flent-bench-client-{{ trunc_uuid }}
        clientfor: {{ item.metadata.labels.app }}
{% if workload_args.multus.enabled is sameas true %}
      annotations:
        k8s.v1.cni.cncf.io/networks: {{ workload_args.multus.client }}
{% endif %}
    spec:
{% if workload_args.hostnetwork is sameas true %}
      hostNetwork : true
      serviceAccountName: benchmark-operator
{% endif %}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ item.metadata.labels.app }}
              topologyKey: kubernetes.io/hostname
      containers:
      - name: benchmark
        image: {{ workload_args.image | default('quay.io/cloud-bulldozer/flent:latest') }}
        env:
          - name: uuid
            value: "{{ uuid }}"
          - name: test_user
            value: "{{ test_user | default("ripsaw") }}"
          - name: clustername
            value: "{{ clustername }}"
{% if elasticsearch is defined %}
          - name: es
            value: "{{ elasticsearch.server }}"
          - name: es_port
            value: "{{ elasticsearch.port }}"
          - name: es_index
            value: "{{ elasticsearch.index_name | default("ripsaw-flent") }}"
{% endif %}
{% if flent.pin is sameas true %}
          - name: client_node
            client_node: {{ flent.pin_client }}
          - name: client_node
            server_node: {{ flent.pin_server }}
{% endif %}
{% if workload_args.client_resources is defined %}
        resources: {{ workload_args.client_resources | to_json }}
{% endif %}
        imagePullPolicy: Always
        command: ["/bin/sh", "-c"]
        args:
{% if workload_args.serviceip is sameas true %}
          - "export serviceip=true;
            export h={{item.spec.clusterIP}};
{% else %}
{% if workload_args.multus.client is defined %}
          - "export h={{ (item['metadata']['annotations']['k8s.v1.cni.cncf.io/networks-status'] | from_json)[1]['ips'][0] }};
{% else %}
          - "export h={{item.status.podIP}};
{% endif %}
{% endif %}
             export hostnet={{workload_args.hostnetwork}};
             cd /tmp/flent-test;
             while true; do
               if [[ $(redis-cli -h {{bo.resources[0].status.podIP}} get start) =~ 'true' ]]; then
{% for test in workload_args.test_types %}
                 run_snafu --tool flent --ftest {{test}} -u {{ uuid }} -r $h --user {{test_user | default("ripsaw")}};
{% endfor %}
               else
                 continue;
               fi;

               break;
             done;
             redis-cli -h {{bo.resources[0].status.podIP}} set start false"
        volumeMounts:
          - name: flent-tmp
            mountPath: "/tmp/flent-test"
      volumes:
        - name: flent-tmp
          emptyDir: {}
      restartPolicy: OnFailure
{% if workload_args.pin is sameas true %}
      nodeSelector:
          kubernetes.io/hostname: '{{ workload_args.pin_client }}'
{% endif %}
{% include "metadata.yml.j2" %}
