---
apiVersion: v1
kind: ConfigMap
metadata:
  name: uperf-run-script-{{item.status.interfaces[0].ipAddress}}-{{ trunc_uuid }}
  namespace: '{{ operator_namespace }}'
data:
  run_script.sh : |
    export h={{item.status.interfaces[0].ipAddress}}
{% if elasticsearch is defined %}
{% if elasticsearch.server is defined %}
    export es={{elasticsearch.server}}
    export es_port={{elasticsearch.port}}
    export uuid={{uuid}}
{% endif %}
{% endif %}
{% if test_user is defined %}
    export test_user={{test_user}}
{% endif %}
    export clustername={{clustername}}
    export hostnet={{workload_args.hostnetwork}}
    export ips=$(hostname -I)
    while true; do
      if [[ ($(redis-cli -h {{bo.resources[0].status.podIP}} get start) =~ 'true') && ($(redis-cli -h {{bo.resources[0].status.podIP}} get {{ trunc_uuid }}) =~ 'true')]]; then
{% for test in workload_args.test_types %}
{% for proto in workload_args.protos %}
{% for size in workload_args.sizes %}
{% for nthr in workload_args.nthrs %}
        cat /tmp/uperf-test/uperf-{{test}}-{{proto}}-{{size}}-{{nthr}};
        for i in `seq 1 {{workload_args.samples}}`; do
          python /opt/snafu/uperf-wrapper/uperf-wrapper.py -w /tmp/uperf-test/uperf-{{test}}-{{proto}}-{{size}}-{{nthr}} -r $i --resourcetype {{resource_kind}}| tee /tmp/uperf-{{trunc_uuid}}-{{test}}-{{proto}}-{{size}}-{{nthr}};
        done;
{% endfor %}
{% endfor %}
{% endfor %}
{% endfor %}
      else
        continue;
      fi;
      break;
    done;
    redis-cli -h {{bo.resources[0].status.podIP}} set start false
    redis-cli -h {{bo.resources[0].status.podIP}} set complete true
