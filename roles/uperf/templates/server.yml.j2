---
{% set control_port = 30000 %}
kind: Job
apiVersion: batch/v1
metadata:
  name: 'uperf-server-{{ item }}-{{ trunc_uuid }}'
  namespace: "{{ operator_namespace }}"
{% if workload_args.annotations is defined or workload_args.server_annotations is defined %}
  annotations:
{% for annotation, value in workload_args.annotations.items() %}
    "{{annotation}}": "{{value}}"
{% endfor %}
{% for annotation, value in workload_args.server_annotations.items() %}
    "{{annotation}}": "{{value}}"
{% endfor %}
{% endif %}
spec:
  ttlSecondsAfterFinished: 600
  backoffLimit: 0
  template:
    metadata:
      labels:
        benchmark-uuid: {{ uuid }}
        benchmark-operator-workload: uperf
        benchmark-operator-role: server
        app: uperf-bench-server-{{item}}-{{ trunc_uuid }}
        index: "{{item}}"
        type: {{ ansible_operator_meta.name }}-bench-server-{{ trunc_uuid }}
{% if workload_args.multus.enabled is sameas true %}
      annotations:
        k8s.v1.cni.cncf.io/networks: {{ workload_args.multus.server}}
{% endif %}
    spec:
{% if workload_args.runtime_class is defined %}
      runtimeClassName: "{{ workload_args.runtime_class }}"
{% endif %}
{% if workload_args.hostnetwork is sameas true %}
      hostNetwork: true
{% endif %}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: type
                operator: In
                values:
                - {{ ansible_operator_meta.name }}-bench-server-{{ trunc_uuid }}
            topologyKey: kubernetes.io/hostname
      containers:
      - name: benchmark
        image: {{ workload_args.image | default('quay.io/cloud-bulldozer/uperf:latest') }}
{% if workload_args.server_resources is defined %}
        resources: {{ workload_args.server_resources | to_json }}
{% endif %}
        imagePullPolicy: Always
        command: ["/bin/sh","-c"]
        args: ["uperf -s -v -P {{ control_port|int + (0 if (workload_args.serviceip is defined and workload_args.serviceip and ( workload_args.servicetype | default("clusterip") == "clusterip" )) else (item|int * 100)) }}"]
      restartPolicy: Never
{% if workload_args.pin is sameas true %}
      nodeSelector:
        kubernetes.io/hostname: '{{ workload_args.pin_server }}'
{% endif %}
{% if workload_args.serviceip is sameas true %}
      securityContext:
        sysctls:
        - name: net.ipv4.ip_local_port_range
          value: 30000 32011
{% endif %}
{% include "metadata.yml.j2" %}
