---
- block:

  - name: template stressng config file
    k8s:
      definition:
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: '{{ ansible_operator_meta.name }}-workload-{{ trunc_uuid }}'
          namespace: '{{ operator_namespace }}'
        data:
          jobfile: "{{ lookup ('template', 'jobfile.j2') }}"

  - include_role:
      name: benchmark_state
      tasks_from: set_state
    vars:
      state: ConfigMaps Created
  when: benchmark_state.resources[0].status.state == "Building"

- block:

  - name: set complete to false
    command: "redis-cli set complete-{{ trunc_uuid }} false"

  - name: start stressng workload job
    k8s:
      definition: "{{ lookup('template', 'stressng_workload.yml.j2') | from_yaml }}"
    register: jobs
    when: resource_kind == "pod"

  - name: start stressng vm workload job
    k8s:
      definition: "{{ lookup('template', 'stressng_workload_vm.yml.j2') | from_yaml }}"
    register: jobs
    when: resource_kind == "vm"

  - include_role:
      name: benchmark_state
      tasks_from: set_state
    vars:
      state: Running

  when: benchmark_state.resources[0].status.state == "ConfigMaps Created"

- block:

  - include_role:
      name: benchmark_state
      tasks_from: completed.yml
    when: resource_kind == "pod"


  - block:

      - name: get complete
        command: "redis-cli get complete-{{ trunc_uuid }}"
        register: complete_status

      - operator_sdk.util.k8s_status:
          api_version: ripsaw.cloudbulldozer.io/v1alpha1
          kind: Benchmark
          name: "{{ ansible_operator_meta.name }}"
          namespace: "{{ operator_namespace }}"
          status:
            state: Complete
            complete: true
        when: complete_status.stdout == "true"
    when: resource_kind == "vm"
  when: benchmark_state.resources[0].status.state == "Running"
