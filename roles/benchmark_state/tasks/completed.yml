---
- name: Get job status
  k8s_info:
    kind: Job
    api_version: v1
    namespace: '{{ operator_namespace }}'
    label_selectors:
      - benchmark-uuid = {{ uuid }}
  register: job_state

# Set Benchmark as Complete when all jobs succeed
- name: Setting benchmark state - Complete
  operator_sdk.util.k8s_status:
    api_version: ripsaw.cloudbulldozer.io/v1alpha1
    kind: Benchmark
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ operator_namespace }}"
    status:
      state: Complete
      complete: true
  when: job_state|json_query('resources[].status[].conditions[]')|selectattr('type', 'equalto', 'Complete')|list

# Set Benchmark as failed when one of the jobs fails
- name: Setting benchmark state - Failed
  operator_sdk.util.k8s_status:
    api_version: ripsaw.cloudbulldozer.io/v1alpha1
    kind: Benchmark
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ operator_namespace }}"
    status:
      state: Failed
      complete: true
  when: job_state|json_query('resources[].status[].conditions[]')|selectattr('type', 'equalto', 'Failed')|list

- name: Get current state
  k8s_info:
    api_version: ripsaw.cloudbulldozer.io/v1alpha1
    kind: Benchmark
    name: '{{ ansible_operator_meta.name }}'
    namespace: '{{ operator_namespace }}'
  register: benchmark_state
