---

- set_fact:
    fio_path: /mnt/pvc
  when: fio.storageclass is defined

- set_fact:
    fio_path: /tmp
  when: fio.storageclass is not defined


- name: Generate fio test
  k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: fio-test
        namespace: '{{ operator_namespace }}'
      data:
        fiojob: "{{ lookup('template', 'job.fio.{{fio.job}}') }}"
  when: ( fio.clients > 0 and fio.job != "custom" )
  register: template_file


- name: Download the custom fio job
  get_url:
    url: "{{ fio.get_url }}"
    dest: /tmp/fio.job
  when: ( fio.clients > 0 and fio.job == "custom" )

- name: Generate Custom fio test
  k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: fio-test
        namespace: '{{ operator_namespace }}'
      data:
        fiojob: "{{ lookup('file', '/tmp/fio.job') }}"
  when: ( fio.clients > 0 and fio.job == "custom" )


- name: Create PVC(s)
  k8s:
    definition:
      kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: "claim{{item}}"
        namespace: '{{ operator_namespace }}'
        annotations:
           volume.beta.kubernetes.io/storage-class: "{{fio.storageclass}}"
      spec:
         accessModes:
           - ReadWriteOnce
         resources:
           requests:
             storage: "{{fio.storagesize}}"
  with_sequence: start=1 count={{fio.clients}}
  when: fio.clients > 0 and fio.storageclass is defined

- name: Start Server(s) - with PVC
  k8s:
    definition:
      kind: Job
      apiVersion: batch/v1
      metadata:
        name: '{{ meta.name }}-fio-client-{{item}}-benchmark'
        namespace: '{{ operator_namespace }}'
      spec:
        ttlSecondsAfterFinished: 600
        template:
          metadata:
            labels:
              app: fio-benchmark
          spec:
            containers:
            - name: bench-server
              image: "quay.io/cloud-bulldozer/fio:latest"
              command: ["/bin/sh","-c"]
              args:
               - "cat /tmp/fio/fiojob;
                  fio /tmp/fio/fiojob"
              volumeMounts:
              - name: config-volume
                mountPath: "/tmp/fio"
              - name: ceph-volume
                mountPath: "/mnt/pvc"
            volumes:
            - name: config-volume
              configMap:
                name: fio-test
            - name: ceph-volume
              persistentVolumeClaim:
                claimName: claim{{item}}
            restartPolicy: Never
  when: fio.clients > 0 and fio.storageclass is defined
  with_sequence: start=1 count={{fio.clients}}

- name: Start Server(s) - no PVC
  k8s:
    definition:
      kind: Job
      apiVersion: batch/v1
      metadata:
        name: '{{ meta.name }}-fio-client-{{item}}-benchmark'
        namespace: '{{ operator_namespace }}'
      spec:
        ttlSecondsAfterFinished: 600
        template:
          metadata:
            labels:
              app: fio-benchmark
          spec:
            containers:
            - name: bench-server
              image: "quay.io/cloud-bulldozer/fio:latest"
              command: ["/bin/sh","-c"]
              args:
               - "cat /tmp/fio/fiojob;
                  fio /tmp/fio/fiojob"
              volumeMounts:
              - name: config-volume
                mountPath: "/tmp/fio"
            volumes:
            - name: config-volume
              configMap:
                name: fio-test
            restartPolicy: Never
  when: fio.clients > 0 and fio.storageclass is not defined
  with_sequence: start=1 count={{fio.clients}}
