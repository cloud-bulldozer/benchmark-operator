---
kind: Job
apiVersion: batch/v1
metadata:
  name: 'fio-server-{{ item }}-benchmark-{{ trunc_uuid }}'
  namespace: '{{ operator_namespace }}'
spec:
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app: fio-benchmark-{{ trunc_uuid }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - fio-benchmark-{{ trunc_uuid }}
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: fio-server
{% if hostpath is defined %}
        securityContext:
          privileged: true
{% endif %}
        image: {{ workload_args.image | default('quay.io/cloud-bulldozer/fio:latest') }}
        imagePullPolicy: Always
        ports:
          - containerPort: 8765
        command: ["/bin/sh", "-c"]
        args:
          - "cd /tmp; fio --server"
{% if workload_args.storageclass is defined or hostpath is defined %}
        volumeMounts:
        - name: data-volume
          mountPath: "{{ fio_path }}"
{% endif %}
      restartPolicy: Never
      serviceAccountName: benchmark-operator
{% if workload_args.pin_server|default('') %}
      nodeSelector:
        kubernetes.io/hostname: '{{ workload_args.pin_server }}'
{% endif %}
{% if workload_args.storageclass is defined %}
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: claim-{{ item }}-{{ trunc_uuid }}
{% elif hostpath is defined %}
      volumes:
      - name: data-volume
        hostPath:
          path: {{ hostpath }}
          type: DirectoryOrCreate
{% endif %}
{% if metadata is defined and metadata.collection|default(false) is sameas true and metadata.targeted|default(true) is sameas true %}
      initContainers:
      - name: backpack-{{ trunc_uuid }}
        image: {{ metadata_image | default('quay.io/cloud-bulldozer/backpack:latest') }}
        command: ["/bin/sh", "-c"]
{% if metadata is defined and metadata.force|default(false) is sameas true %}
        args: ["python3 stockpile-wrapper.py -s {{ elasticsearch.server }} -p {{ elasticsearch.port }} -u {{ uuid }} -n $my_node_name -N $my_pod_name --redisip {{ bo.resources[0].status.podIP }} --redisport 6379 --force"]
{% else %}
        args: ["python3 stockpile-wrapper.py -s {{ elasticsearch.server }} -p {{ elasticsearch.port }} -u {{ uuid }} -n $my_node_name -N $my_pod_name --redisip {{ bo.resources[0].status.podIP }} --redisport 6379"]
{% endif %}
        imagePullPolicy: Always
        securityContext:
          privileged: {{ metadata.privileged | default(false) | bool }}
        env:
          - name: my_node_name
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: my_pod_name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
      serviceAccountName: {{ metadata.serviceaccount | default('benchmark-operator') }}
{% endif %}
