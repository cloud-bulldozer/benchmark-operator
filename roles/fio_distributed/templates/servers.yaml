---
kind: Pod
apiVersion: v1
metadata:
  name: 'fio-server-{{ item }}-benchmark-{{ trunc_uuid }}'
  namespace: '{{ operator_namespace }}'
  labels:
    benchmark-uuid: {{ uuid }}
    app: fio-benchmark-{{ trunc_uuid }}
{% if workload_args.annotations is defined or workload_args.server_annotations is defined %}
  annotations:
{% for annotation, value in workload_args.annotations.items() %}
    "{{annotation}}": "{{value}}"
{% endfor %}
{% for annotation, value in workload_args.server_annotations.items() %}
    "{{annotation}}": "{{value}}"
{% endfor %}
{% endif %}
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - fio-benchmark-{{ trunc_uuid }}
          topologyKey: "kubernetes.io/hostname"
{% if workload_args.runtime_class is defined %}
  runtimeClassName: "{{ workload_args.runtime_class }}"
{% endif %}
  containers:
  - name: fio-server
{% if hostpath is defined %}
    securityContext:
      privileged: true
{% endif %}
    image: {{ workload_args.image | default('quay.io/cloud-bulldozer/fio:latest') }}
    imagePullPolicy: Always
    ports:
      - containerPort: 8765
    command: ["/bin/sh", "-c"]
    args:
      - "cd /tmp; fio --server"
{% if workload_args.storageclass is defined or hostpath is defined %}
{% if workload_args.pvcvolumemode is defined and workload_args.pvcvolumemode == "Block" %}
    volumeDevices:
{% else %}      
    volumeMounts:
{% endif %}      
    - name: data-volume
{% if workload_args.pvcvolumemode is defined and workload_args.pvcvolumemode == "Block" %}     
      devicePath: "{{ fio_path }}"
{% else %}
      mountPath: "{{ fio_path }}"      
{% endif %}
{% endif %}
  restartPolicy: Never
{% if workload_args.nodeselector is defined %}
  nodeSelector: 
{% for label, value in  workload_args.nodeselector.items() %}
    {{ label | replace ("_", "-" )}}: {{ value }}
{% endfor %}
{% endif  %}
{% if workload_args.tolerations is defined %}
  tolerations:
    {{ workload_args.tolerations }}
{% endif %}
{% if workload_args.storageclass is defined %}
  volumes:
  - name: data-volume
    persistentVolumeClaim:
      claimName: claim-{{ item }}-{{ trunc_uuid }}
{% elif hostpath is defined %}
  volumes:
  - name: data-volume
    hostPath:
      path: {{ hostpath }}
      type: DirectoryOrCreate
{% endif %}
{% include "metadata_pod.yml.j2" %}
