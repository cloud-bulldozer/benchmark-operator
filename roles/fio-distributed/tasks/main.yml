---
- name: Provide path for fio - PV
  set_fact:
    fio_path: /mnt/pvc
  when: fiod.storageclass is defined

- name: Provide path for fio - No PV
  set_fact:
    fio_path: /tmp
  when: fiod.storageclass is not defined

- name: Generate fio test
  k8s:
    definition: "{{ lookup('template', 'configmap.yml.j2') | from_yaml }}"

- name: Create PVC(s)
  k8s:
    definition:
      kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: "claim-{{ item }}-{{ trunc_uuid }}"
        namespace: '{{ operator_namespace }}'
        annotations:
           volume.beta.kubernetes.io/storage-class: "{{ fiod.storageclass }}"
      spec:
         accessModes:
           - ReadWriteOnce
         resources:
           requests:
             storage: "{{ fiod.storagesize }}"
  with_sequence: start=1 count={{ fiod.servers }}
  when: fiod.storageclass is defined

- name: Start FIO Server(s)
  k8s:
    definition: "{{ lookup('template', 'servers.yaml') | from_yaml }}"
  when: fiod.servers > 0
  with_sequence: start=1 count={{ fiod.servers }}

- name: Capture pod list
  k8s_facts:
    kind: Pod
    api_version: v1
    namespace: '{{ operator_namespace }}'
    label_selectors:
      - app = fio-benchmark-{{ trunc_uuid }}
  register: server_pods
  until: "fiod.servers == (server_pods | json_query('resources[].status.podIP')|length)"
  retries: 50
  delay: 10

- name: Create IP list and nodes
  set_fact:
    pod_details: "{{ pod_details|default({}) | combine({item.status.podIP: item.spec.nodeName}) }}"
  with_items: "{{ server_pods.resources }}"

# can perhaps optimize here, by adding to list in above loop
- name: Create IP list
  set_fact:
    fio_hosts: |
       {% for ip, node in pod_details.iteritems() %}
       {{ ip }}
       {% endfor %}

- name: Generate fio hosts
  k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: fio-hosts-{{ trunc_uuid }}
        namespace: '{{ operator_namespace }}'
      data:
        hosts: |
          {{ fio_hosts }}

- name: Start FIO Client
  k8s:
    definition: "{{ lookup('template', 'client.yaml') | from_yaml }}"
