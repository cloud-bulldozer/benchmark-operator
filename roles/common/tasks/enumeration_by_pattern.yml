---
# This common playbook takes a list called 'enumeration_list' and outputs (set_fact) a list
# called 'enumeration' of numbers based on the length of the 'enumeration_list' and a given
# pattern called 'enumeration_pattern'.
#
# The 'enumeration_list' can be a list of anything since all we care about here is its length.
#
# The 'enumeration_pattern' must be one of the patterns defined in the logic below:
#   - by1 -- A linear pattern that simply outputs an incremental number for each list item
#   - by2 -- A linear pattern that outputs 0+even numbers up to enumeration_list.length
#   - doubling -- An exponential doubling pattern up to the closest number to enumeration_list.length
#   - all -- A single item simply representing enumeration_list.length
#
# By default this assumes zero-base counting, but you can override this with:
# enumeration_zero_base = false
#
#
# EXAMPLE 1:
# If you set:
# enumeration_list = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet']
# enumeration_pattern = 'by2'
#
# Then this will output:
# enumeration = [1, 3, 5, 7]
#
# EXAMPLE 2:
# If you set:
# enumeration_list = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet']
# enumeration_pattern = 'doubling'
#
# Then this will output:
# enumeration = [1, 2, 4]
#
#
# To use this in your role playbook, set the required variables and then include the role tasks.
#
# - name: Set the list to be enumerated
#   set_fact:
#     enumeration_list: '{{ workload_args.databases }}'
# 
# - name: Set enumeration pattern
#   set_fact:
#     enumeration_pattern: '{{ num_databases_pattern }}'
# 
# - name: Set enumeration zero base (defaults to false if excluded)
#   set_fact:
#     enumeration_zero_base: false
# 
# - name: Generate enumeration list by enumeration pattern
#   include_role:
#     name: common
#     tasks_from: enumeration_by_pattern.yml
#

- name: Default to one-base counting
  set_fact:
    base: 1

- name: Change base if enumeration_zero_base is true
  set_fact:
    base: 0
  when: enumeration_zero_base is defined and enumeration_zero_base

- name: Set enumeration to linear by-1 pattern
  set_fact:
    enumeration: "{{ enumeration|default([]) + [(item.0|int + base)] }}"
  with_indexed_items: "{{ enumeration_list }}"
  when: enumeration_pattern == "by1"

- name: Set enumeration to linear by-2 pattern
  set_fact:
    enumeration: "{{ enumeration|default([]) + [(item.0|int + base)] }}"
  with_indexed_items: "{{ enumeration_list }}"
  when: enumeration_pattern == "by2" and item.0|int is odd

- name: Set enumeration to exponential doubling pattern
  set_fact:
    enumeration: "{{ enumeration|default([]) + [(item.0|int + base)] }}"
  with_indexed_items: "{{ enumeration_list }}"
  when: enumeration_pattern == "doubling" and (((item.0|int + base)|log(2)) is even or ((item.0|int + base)|log(2)) is odd)

- name: Set enumeration to all pattern
  set_fact:
    enumeration: "{{ enumeration|default([]) + [enumeration_list|length - 1 + base] }}"
  when: enumeration_pattern == "all"
