---
kind: Job
apiVersion: batch/v1
metadata:
  name: kube-burner-{{ trunc_uuid }}
  namespace: {{ operator_namespace }}
spec:
  backoffLimit: 0
  activeDeadlineSeconds: {{ workload_args.job_timeout|default(3600) }}
  template:
    metadata:
      labels:
        app: kube-burner-benchmark-{{ trunc_uuid }}
        benchmark-uuid: {{ uuid }}
{% if workload_args.annotations is defined %}
      annotations:
{% for annotation, value in workload_args.annotations.items() %}
        "{{annotation}}": "{{value}}"
{% endfor %}
{% endif %}
    spec:
{% if workload_args.runtime_class is defined %}
      runtimeClassName: "{{ workload_args.runtime_class }}"
{% endif %}
      tolerations: {{ workload_args.tolerations|default([]) }}
      restartPolicy: Never
      nodeSelector:
{% if workload_args.pin_server is defined and workload_args.pin_server is mapping %}
{% for label, value in  workload_args.pin_server.items() %}
        {{ label | replace ("_", "-" )}}: {{ value }}
{% endfor %}
{% else %}
        node-role.kubernetes.io/worker: ""
{% endif %}
      containers:
      - name: kube-burner
        image: {{ workload_args.image | default('quay.io/cloud-bulldozer/kube-burner:latest') }}
        imagePullPolicy: Always
        securityContext:
          readOnlyRootFilesystem: false
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{% if workload_args.extra_env_vars is defined and workload_args.extra_env_vars is mapping %}
{% for name, value in workload_args.extra_env_vars.items() %}
        - name: {{ name }}
          value: "{{ value }}"
{% endfor %}
{% endif %}
        workingDir: /tmp/kube-burner
        command: ["/bin/sh", "-c"]
        args:
        - >
          kube-burner init
{% if workload_args.remote_config is defined and workload_args.remote_config %}
          -c {{ workload_args.remote_config }}
{% elif workload_args.configmap is defined and workload_args.configmap %}
          --configmap={{ workload_args.configmap }}
          --namespace=${POD_NAMESPACE}
{% else %}
          -c config.yml
{% endif %}
{% if prometheus is defined and prometheus.prom_url is defined %}
          -u {{ prometheus.prom_url }}
          -t {{ prometheus.prom_token }}
          --step={{ workload_args.step|default("30s") }}
{% if workload_args.configmap is not defined %}
          -m {{ workload_args.remote_metrics_profile|default("metrics.yaml", true) }}
{% if workload_args.remote_alert_profile is defined and workload_args.remote_alert_profile %}
          -a {{ workload_args.remote_alert_profile }}
{% endif %}
{% endif %}
{% endif %}
          --uuid={{ uuid }}
          --log-level={{ workload_args.log_level|default("info") }}
{% if workload_args.configmap is not defined %}
        volumeMounts:
          - name: kube-burner-config
            mountPath: /tmp/kube-burner
      volumes:
        - name: kube-burner-config
          configMap:
            name: kube-burner-config-{{ trunc_uuid }}
{% endif %}
{% include "metadata.yml.j2" %}
