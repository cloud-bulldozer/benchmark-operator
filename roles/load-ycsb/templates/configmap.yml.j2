---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ycsb-test-{{ trunc_uuid }}
  namespace: '{{ operator_namespace }}'
data:
  tsworkload : |
    # Copyright (c) 2017 YCSB contributors. All rights reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License"); you
    # may not use this file except in compliance with the License. You
    # may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    # implied. See the License for the specific language governing
    # permissions and limitations under the License. See accompanying
    # LICENSE file.
    # Yahoo! Cloud System Benchmark
    # Workload A: Small cardinality consistent data for 2 days
    #   Application example: Typical monitoring of a single compute or small
    #   sensor station where 90% of the load is write and only 10% is read
    #   (it's usually much less). All writes are inserts. No sparsity so
    #   every series will have a value at every timestamp.
    #
    #   Read/insert ratio: 10/90
    #   Cardinality: 16 per key (field), 64 fields for a total of 1,024
    #                time series.
    workload=com.yahoo.ycsb.workloads.TimeSeriesWorkload
    recordcount={{ycsb.recordcount}}
    operationcount={{ycsb.operationcount}}
    fieldlength=8
    fieldcount=64
    tagcount=4
    tagcardinality=1,2,4,2
    sparsity=0.0
    delayedSeries=0.0
    delayedIntervals=0
    timestampunits=SECONDS
    timestampinterval=60
    querytimespan=3600
    readproportion=0.10
    updateproportion=0.00
    insertproportion=0.90
  workloada : |
    # Copyright (c) 2010 Yahoo! Inc. All rights reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License"); you
    # may not use this file except in compliance with the License. You
    # may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    # implied. See the License for the specific language governing
    # permissions and limitations under the License. See accompanying
    # LICENSE file.
    # Yahoo! Cloud System Benchmark
    # Workload A: Update heavy workload
    #   Application example: Session store recording recent actions
    #
    #   Read/update ratio: 50/50
    #   Default data size: 1 KB records (10 fields, 100 bytes each, plus key)
    #   Request distribution: zipfian
    recordcount={{ycsb.recordcount}}
    operationcount={{ycsb.operationcount}}
    workload=com.yahoo.ycsb.workloads.CoreWorkload
    readallfields=true
    readproportion=0.5
    updateproportion=0.5
    scanproportion=0
    insertproportion=0
    requestdistribution={{ycsb.requestdistribution}}
  workloadb : |
    # Copyright (c) 2010 Yahoo! Inc. All rights reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License"); you
    # may not use this file except in compliance with the License. You
    # may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    # implied. See the License for the specific language governing
    # permissions and limitations under the License. See accompanying
    # LICENSE file.
    # Yahoo! Cloud System Benchmark
    # Workload B: Read mostly workload
    #   Application example: photo tagging; add a tag is an update, but most operations are to read tags
    #
    #   Read/update ratio: 95/5
    #   Default data size: 1 KB records (10 fields, 100 bytes each, plus key)
    #   Request distribution: zipfian
    recordcount={{ycsb.recordcount}}
    operationcount={{ycsb.operationcount}}
    workload=com.yahoo.ycsb.workloads.CoreWorkload
    readallfields=true
    readproportion=0.95
    updateproportion=0.05
    scanproportion=0
    insertproportion=0
    requestdistribution={{ycsb.requestdistribution}}
  workloadc : |
    # Copyright (c) 2010 Yahoo! Inc. All rights reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License"); you
    # may not use this file except in compliance with the License. You
    # may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    # implied. See the License for the specific language governing
    # permissions and limitations under the License. See accompanying
    # LICENSE file.
    # Yahoo! Cloud System Benchmark
    # Workload C: Read only
    #   Application example: user profile cache, where profiles are constructed elsewhere (e.g., Hadoop)
    #
    #   Read/update ratio: 100/0
    #   Default data size: 1 KB records (10 fields, 100 bytes each, plus key)
    #   Request distribution: zipfian
    recordcount={{ycsb.recordcount}}
    operationcount={{ycsb.operationcount}}
    workload=com.yahoo.ycsb.workloads.CoreWorkload
    readallfields=true
    readproportion=1
    updateproportion=0
    scanproportion=0
    insertproportion=0
    requestdistribution={{ycsb.requestdistribution}}
  workloadd : |
    # Copyright (c) 2010 Yahoo! Inc. All rights reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License"); you
    # may not use this file except in compliance with the License. You
    # may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    # implied. See the License for the specific language governing
    # permissions and limitations under the License. See accompanying
    # LICENSE file.
    # Yahoo! Cloud System Benchmark
    # Workload D: Read latest workload
    #   Application example: user status updates; people want to read the latest
    #
    #   Read/update/insert ratio: 95/0/5
    #   Default data size: 1 KB records (10 fields, 100 bytes each, plus key)
    #   Request distribution: latest
    # The insert order for this is hashed, not ordered. The "latest" items may be
    # scattered around the keyspace if they are keyed by userid.timestamp. A workload
    # which orders items purely by time, and demands the latest, is very different than
    # workload here (which we believe is more typical of how people build systems.)
    recordcount={{ycsb.recordcount}}
    operationcount={{ycsb.operationcount}}
    workload=com.yahoo.ycsb.workloads.CoreWorkload
    readallfields=true
    readproportion=0.95
    updateproportion=0
    scanproportion=0
    insertproportion=0.05
    requestdistribution={{ycsb.requestdistribution}}
  workloade : |
    # Copyright (c) 2010 Yahoo! Inc. All rights reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License"); you
    # may not use this file except in compliance with the License. You
    # may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    # implied. See the License for the specific language governing
    # permissions and limitations under the License. See accompanying
    # LICENSE file.
    # Yahoo! Cloud System Benchmark
    # Workload E: Short ranges
    #   Application example: threaded conversations, where each scan is for the posts in a given thread (assumed to be clustered by thread id)
    #
    #   Scan/insert ratio: 95/5
    #   Default data size: 1 KB records (10 fields, 100 bytes each, plus key)
    #   Request distribution: zipfian
    # The insert order is hashed, not ordered. Although the scans are ordered, it does not necessarily
    # follow that the data is inserted in order. For example, posts for thread 342 may not be inserted contiguously, but
    # instead interspersed with posts from lots of other threads. The way the YCSB client works is that it will pick a start
    # key, and then request a number of records; this works fine even for hashed insertion.
    recordcount={{ycsb.recordcount}}
    operationcount={{ycsb.operationcount}}
    workload=com.yahoo.ycsb.workloads.CoreWorkload
    readallfields=true
    readproportion=0
    updateproportion=0
    scanproportion=0.95
    insertproportion=0.05
    requestdistribution={{ycsb.requestdistribution}}
    maxscanlength=100
    scanlengthdistribution=uniform
  workloadf : |
    # Copyright (c) 2010 Yahoo! Inc. All rights reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License"); you
    # may not use this file except in compliance with the License. You
    # may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    # implied. See the License for the specific language governing
    # permissions and limitations under the License. See accompanying
    # LICENSE file.
    # Yahoo! Cloud System Benchmark
    # Workload F: Read-modify-write workload
    #   Application example: user database, where user records are read and modified by the user or to record user activity.
    #
    #   Read/read-modify-write ratio: 50/50
    #   Default data size: 1 KB records (10 fields, 100 bytes each, plus key)
    #   Request distribution: zipfian
    recordcount={{ycsb.recordcount}}
    operationcount={{ycsb.operationcount}}
    workload=com.yahoo.ycsb.workloads.CoreWorkload
    readallfields=true
    readproportion=0.5
    updateproportion=0
    scanproportion=0
    insertproportion=0
    readmodifywriteproportion=0.5
    requestdistribution={{ycsb.requestdistribution}}
