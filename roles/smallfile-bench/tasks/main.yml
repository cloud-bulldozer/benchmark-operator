---
- set_fact:
    smallfile_path: /tmp
  when: smallfile.clients > 0

- set_fact:
    smallfile_path: /mnt/pvc
  when: smallfile.clients > 0 and smallfile.storageclass is defined and smallfile.storagesize is defined

- name: Create PVC(s)
  k8s:
    definition:
      kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: "claim{{ item }}-{{ trunc_uuid }}"
        namespace: "{{ operator_namespace }}"
        annotations:
          volume.beta.kubernetes.io/storage-class: "{{ smallfile.storageclass }}"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "{{ smallfile.storagesize }}"
  with_sequence: start=1 count={{ smallfile.clients }}
  when: smallfile.clients > 0 and smallfile.storageclass is defined and smallfile.storagesize is defined

- name: Generate smallfile test input yaml
  k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        namespace: "{{ operator_namespace }}"
        name: smallfile-test-{{ trunc_uuid }}
      data:
        smallfilejob: "{{ lookup('template', 'smallfilejob.other_parameters.yaml.j2') }}"
        subscriber: "{{ lookup('template', 'subscriber.py.j2') }}"
        publisher: "{{ lookup('template', 'publisher.py.j2') }}"

- name: Capture operator information
  k8s_facts:
    kind: Pod
    api_version: v1
    namespace: "{{ operator_namespace }}"
    label_selectors:
      - name = benchmark-operator
  register: bo

- name: Run PUBLISHER Pod
  k8s:
    definition:
      kind: Job
      apiVersion: batch/v1
      metadata:
        name: "smallfile-publisher-{{ trunc_uuid }}"
        namespace: "{{ operator_namespace }}"
      spec:
        ttlSecondsAfterFinished: 600
        template:
          metadata:
            labels:
              app: smallfile-publisher
          spec:
            containers:
              - name: publisher-container
                image: "quay.io/cloud-bulldozer/smallfile:master"
                tty: true
                command: ["/bin/sh", "-c"]
                workingDir: /root/smallfile-master/
                args:
                  - python /tmp/publisher {{bo.resources[0].status.podIP}} {{smallfile.clients}}
                volumeMounts:
                  - name: config-volume
                    mountPath: "/tmp"
            volumes:
              - name: config-volume
                configMap:
                  name: smallfile-test-{{ trunc_uuid }}
                  defaultmode: 0777
            restartPolicy: Never
  when: smallfile.clients > 0

- name: Create smallfile pods
  k8s:
    definition: "{{ lookup('template', 'workload_job.yml.j2') }}"
  with_sequence: start=1 count={{ smallfile.clients }}
  when: smallfile.clients > 0
