---
kind: Job
apiVersion: batch/v1
metadata:
  name: "smallfile-client-{{ item }}-benchmark-{{ trunc_uuid }}"
  namespace: "{{ operator_namespace }}"
spec:
  ttlSecondsAfterFinished: 600
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: smallfile-benchmark-{{ trunc_uuid }}
    spec:
      restartPolicy: Never
      containers:
        - name: benchmark-server
{% if hostpath is defined %}
          securityContext:
            privileged: true
{% endif %}
          image: "quay.io/cloud-bulldozer/smallfile:master"
          # example of how to debug using your own workload image
          #image: "quay.io/bengland2/smallfile:master"
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          workingDir: /opt/snafu
          wait: true
          env:
          - name: uuid
            value: "{{ uuid }}"
          - name: test_user
            value: "{{ test_user }}"
          - name: clustername
            value: "{{ clustername }}"
{% if elasticsearch.server is defined %}
          - name: es
            value: "{{ elasticsearch.server }}"
          - name: es_port
            value: "{{ elasticsearch.port }}"
          - name: es_index
            value: "{{ es_index }}"
{% endif %}
          - name: redis_host
            value: "{{ bo.resources[0].status.podIP }}"
          - name: clients
            value: "{{ smallfile.clients }}"
          args:
            - python /tmp/smallfile/subscriber {{bo.resources[0].status.podIP}};
              export TMPDIR=/tmp
              arr=$(python <<< "print(','.join({{smallfile.operation}}))");
              rm -rf {{smallfile_path}}/RESULTS ;
              mkdir -p {{smallfile_path}}/RESULTS;
              mkdir -p {{smallfile_path}}/smallfile_test_data;
              python /opt/snafu/run_snafu.py 
{% if smallfile.samples is defined %}
              --samples {{smallfile.samples}}
{% endif %}
              --tool smallfile 
              --operations $arr 
              --top {{smallfile_path}}/smallfile_test_data 
              --dir /var/tmp/RESULTS 
              --yaml-input-file /tmp/smallfile/smallfilejob ;
              if [ $? = 0 ] ; then echo RUN STATUS DONE ; else exit 1 ; fi
          volumeMounts:
            - name: config-volume
              mountPath: "/tmp/smallfile"
{% if smallfile.storageclass is defined or hostpath is defined %}
            - name: data-volume
              mountPath: "{{ smallfile_path }}"
{% endif %}
      restartPolicy: Never
      volumes:
        - name: config-volume
          configMap:
            name: smallfile-test-{{ trunc_uuid }}
            defaultmode: 0777
{% if smallfile.storageclass is defined %}
        - name: data-volume
          persistentVolumeClaim:
            claimName: "claim{{item}}-{{ trunc_uuid }}"
{% elif hostpath is defined %}
        - name: data-volume
          hostPath:
            path: {{ hostpath }}
            type: DirectoryOrCreate
{% endif %}
      restartPolicy: Never
      serviceAccountName: benchmark-operator
