---
kind: Job
apiVersion: batch/v1
metadata:
  name: 'scale-{{ trunc_uuid }}'
  namespace: '{{ operator_namespace }}'
spec:
  backoffLimit: 0
  activeDeadlineSeconds: {{ workload_args.job_timeout|default(3600) }}
  template:
    metadata:
      labels:
        app: scale-{{ trunc_uuid }}
        benchmark-uuid: {{ uuid }}
{% if workload_args.annotations is defined %}
      annotations:
{% for annotation, value in workload_args.annotations.items() %}
        "{{annotation}}": "{{value}}"
{% endfor %}
{% endif %}
    spec:
{% if workload_args.runtime_class is defined %}
      runtimeClassName: "{{ workload_args.runtime_class }}"
{% endif %}
{% if workload_args.tolerations is defined %}
      tolerations:
      - key: {{ workload_args.tolerations.key }}
        value: {{ workload_args.tolerations.value }}
        effect: {{ workload_args.tolerations.effect }}
{% endif %}
{% if workload_args.label is defined %}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ workload_args.label.key }}
                operator: In
                values:
                - {{ workload_args.label.value }}
{% endif %}
      containers:
      - name: scale
        image: {{ workload_args.image | default('quay.io/cloud-bulldozer/scale_openshift:latest') }}
        imagePullPolicy: Always
        env:
          - name: uuid
            value: "{{ uuid }}"
          - name: test_user
            value: "{{ test_user | default("ripsaw") }}"
          - name: clustername
            value: "{{ clustername }}"
{% if elasticsearch.url %}
          - name: es
            value: "{{ elasticsearch.url }}"
          - name: es_index
            value: "{{ elasticsearch.index_name | default("openshift-cluster-timings") }}"
          - name: es_verify_cert
            value: "{{ elasticsearch.verify_cert | default(true) }}"
          - name: parallel
            value: "{{ elasticsearch.parallel | default(false) }}"
{% endif %}
{% if prometheus is defined %}
          - name: prom_es
            value: "{{ prometheus.es_url }}"
          - name: prom_parallel
            value: "{{ prometheus.es_parallel | default(false) }}"
          - name: prom_token
            value: "{{ prometheus.prom_token | default() }}"
          - name: prom_url
            value: "{{ prometheus.prom_url | default() }}"
{% endif %}
{% if workload_args.aws is defined %}
          - name: AWS_ACCESS_KEY_ID
            value: "{{ workload_args.aws.access_key_id | default() }}"
          - name: AWS_SECRET_ACCESS_KEY
            value: "{{ workload_args.aws.secret_access_key | default() }}"
          - name: AWS_DEFAULT_REGION
            value: "{{ workload_args.aws.default_region | default() }}"
{% endif %}
        command: ["/bin/sh", "-e", "-c"]
        args:
          - "run_snafu --tool scale --scale {{workload_args.scale}} -u {{uuid}} --user {{test_user|default("ripsaw")}} --incluster true --poll_interval {{workload_args.poll_interval|default(5)}} \
{% if workload_args.debug is defined and workload_args.debug %}
            -v \
{% endif %}
{% if workload_args.rosa is defined %}
            --rosa-cluster {{workload_args.rosa.cluster_name}} --rosa-env {{workload_args.rosa.env}} --rosa-token {{workload_args.rosa.token}} \
{% endif %}
            ;
            sleep {{post_sleep|default(0)}}"
      restartPolicy: Never
{% include "metadata.yml.j2" %}
