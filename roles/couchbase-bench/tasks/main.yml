---
# Install Couchbase Operator (Assume rook is already in place? or should we check?)
- name: Create CRD for Couchbase Operator
  k8s:
    definition: "{{ lookup('file', 'crd.yaml') }}"
  when: couchbase.servers.size > 0

- name: Create Cluster Role for Service Account
  k8s:
    definition: "{{ lookup('file', 'cluster-role-sa.yaml') }}"
  when: couchbase.servers.size > 0

- name: Create Service Account
  k8s:
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: couchbase-operator
        namespace: '{{ meta.namespace }}'
  when: couchbase.servers.size > 0

- name: Create ClusterRoleBinding for the Service Account
  k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: couchbase-operator-rolebinding
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: couchbase-operator
      subjects:
      - kind: ServiceAccount
        name: couchbase-operator
        namespace: '{{ meta.namespace }}'
  when: couchbase.servers.size > 0

- name: Create Cluster Role for the user
  k8s:
    definition: "{{ lookup('file', 'cluster-role-user.yaml') }}"
  when: couchbase.servers.size > 0

- name: Create ClusterRoleBinding for the User
  k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: couchbasecluster-rolebinding
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: couchbasecluster
  when: couchbase.servers.size > 0

- name: Create Role for the Benchmark User
  k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: benchmark-operator-for-cb
        namespace: '{{ meta.namespace }}'
      rules:
      - apiGroups:
        - ""
        resources:
        - namespaces
        verbs:
        - get
  when: couchbase.servers.size > 0

- name: Create RoleBinding for the Benchmark User
  k8s:
    definition:
      kind: RoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: benchmark-operator-for-cb
        namespace: '{{ meta.namespace }}'
      subjects:
      - kind: ServiceAccount
        name: benchmark-operator
      roleRef:
        kind: Role
        name: benchmark-operator-for-cb
        apiGroup: rbac.authorization.k8s.io
  when: couchbase.servers.size > 0

- name: Create the cb-example-auth Auth Secret
  k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: cb-example-auth
        namespace: '{{ meta.namespace }}'
      type: Opaque
      data:
        username: QWRtaW5pc3RyYXRvcg==
        password: cGFzc3dvcmQ=
  when: couchbase.servers.size > 0

- name: Download Couchbase Operator from operatorhub.io
  get_url:
    url: https://www.operatorhub.io/install/couchbase-operator.v1.1.0.yaml
    dest: /tmp/cboperator.yaml
  when: couchbase.servers.size > 0

- name: Deploy Couchbase Operator from operatorhub.io
  k8s:
    src: /tmp/cboperator.yaml
  when: couchbase.servers.size > 0

# Launch Couchbase DB from operator
# Launch YCSB to run workload against Couchbase DB
