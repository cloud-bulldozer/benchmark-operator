---
- name: "Parse testpmd network"
  include_tasks: 10_network_parser.yml
  loop: "{{ workload_args.networks.testpmd }}"

- name: "Set testpmd MAC list"
  include_tasks: 20_mac_parser.yml
  loop: "{{ workload_args.networks.testpmd }}"
  loop_control:
    loop_var: network
  vars:
    net_type: testpmd 
    
- name: "Set trex MAC list"
  include_tasks: 20_mac_parser.yml
  loop: "{{ workload_args.networks.trex }}"
  loop_control:
    loop_var: network
  vars:
    net_type: trex 

- block:

  - name: Start Testpmd application pods
    k8s:
      definition: "{{ lookup('template', 'testpmd.yml.j2') | from_yaml }}"

  - include_role:
      name: benchmark_state
      tasks_from: set_state
    vars:
      state: "Starting TestPMD"

  when: benchmark_state.resources[0].status.state == "Building"

- block:

  - name: Wait for pods to be running....
    k8s_facts:
      kind: Pod
      api_version: v1
      namespace: '{{ operator_namespace }}'
      label_selectors:
        - app = testpmd-application-pod-{{ trunc_uuid }}
    register: application_pods

  - include_role:
      name: benchmark_state
      tasks_from: set_state
    vars:
      state: "Starting TRex"
    when: 
      - "(application_pods | json_query('resources[].status[]')|selectattr('phase','match','Running')|list|length) == 1"

  when: benchmark_state.resources[0].status.state == "Starting TestPMD"

- name: Set trex network fact
  set_fact:      
    network_resources: {}
    network_name_list: []

- name: "Parse TRex network"
  include_tasks: 10_network_parser.yml
  loop: "{{ workload_args.networks.trex }}"

- block:
  - name: Get TestPMD pod info
    k8s_facts:
      kind: Pod
      api_version: v1
      namespace: '{{ operator_namespace }}'
      label_selectors:
        - app = testpmd-application-pod-{{ trunc_uuid }}
    register: application_pods

  - name: Start TRex
    k8s:
      definition: "{{ lookup('template', 'trex.yml.j2') | from_yaml }}"
    with_items: "{{ application_pods.resources }}"

  - include_role:
      name: benchmark_state
      tasks_from: set_state
    vars:
      state: "Waiting for TRex"

  when: benchmark_state.resources[0].status.state == "Starting TRex"

- block:

  - name: Wait for pods to be running....
    k8s_facts:
      kind: Pod
      api_version: v1
      namespace: '{{ operator_namespace }}'
      label_selectors:
        - app = trex-traffic-gen-pod-{{ trunc_uuid }}
    register: trex_pods

  - include_role:
      name: benchmark_state
      tasks_from: set_state
    vars:
      state: Running
    when: trex_pods.resources|length > 0

  when: benchmark_state.resources[0].status.state == "Waiting for TRex"

- include_role:
    name: benchmark_state
    tasks_from: completed.yml
  when: benchmark_state.resources[0].status.state == "Running"
