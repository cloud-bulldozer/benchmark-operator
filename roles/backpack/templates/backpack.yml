---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "backpack-{{ trunc_uuid }}"
  namespace: "{{ operator_namespace }}"
spec:
  selector:
    matchExpressions:
      - key: app
        operator: In
        values:
        - backpack-{{ trunc_uuid }}
  template:
    metadata:
      labels:
        name: backpack-{{ trunc_uuid }}
        app: backpack-{{ trunc_uuid }}
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
{% if metadata.label is defined %}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
{% for meta_name, meta_value in metadata.label %}
            - matchExpressions:
              - key: {{ meta_name }}
                operator: In
                values:
                - {{ meta_value }}
{% endfor %}
{% endif %}
      containers:
      - name: backpack
        image: {{ metadata.image }}
        command: ["/bin/sh", "-c"]
        args:
          - >
            python3
            stockpile-wrapper.py
            -s={{ elasticsearch.server }}
            -p={{ elasticsearch.port }}
            -u={{ uuid }}
            -n=${my_node_name}
            -N=${my_pod_name}
            --redisip={{ bo.resources[0].status.podIP }}
            --redisport=6379
{% if metadata.force is sameas true %}
            --force
{% endif %}
{% if metadata.stockpile_tags|length > 0 %}
            --tags={{ metadata.stockpile_tags|join(",") }}
{% endif %}
{% if metadata.stockpile_skip_tags|length > 0 %}
            --skip-tags={{ metadata.stockpile_skip_tags|join(",") }}
{% endif %}
            && touch /tmp/indexed; sleep infinity
        imagePullPolicy: Always
        securityContext:
          privileged: {{ metadata.privileged }}
        readinessProbe:
          exec:
            command:
              - ls
              - /tmp/indexed
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 120
        env:
          - name: my_node_name
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: my_pod_name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
      serviceAccountName: {{ metadata.serviceaccount }}
      terminationGracePeriodSeconds: 30
