apiVersion: ripsaw.cloudbulldozer.io/v1alpha1
kind: Benchmark
metadata:
  name: kube-burner-cluster-density-example
  namespace: my-ripsaw
spec:
  # Metadata information
  elasticsearch:
    # Elastic search instance with full URL format. https://elastic.apps.org:9200
    url: http://my.elasticsearch.server:80
  prometheus:
    # Elastic search instance with full URL format. https://elastic.apps.org:9200
    es_url: http://my.elasticsearch.server:80
    # Prometheus bearer token
    prom_token: PROMETHEUS_BEARER_TOKEN
    # Prometheus URL with full URL format. https://prometheus-k8s.openshift-monitoring.svc.cluster.local:9091
    prom_url: https://prometheus-k8s.openshift-monitoring.svc.cluster.local:9091
  workload:
    name: kube-burner
    args:
      # Workload name
      workload: cluster-density
      # Kube-burner Job timeout
      job_timeout: 7200
      # ES index name
      default_index: ripsaw-kube-burner
      # Number of job iterations
      job_iterations: 100
      # Pin kube-burner to a node using the value of the label kubernetes.io/hostname
      pin_server: {"node-role.kubernetes.io/worker": ""}
      # Wait for pods to be runnig before finishing kube-burner workload
      wait_when_finished: true
      # Wait for all pods to be running before moving forward to the next job iteration
      pod_wait: false
      # Use a custom kube-burner image
      image: quay.io/cloud-bulldozer/kube-burner:latest
      # Queries per second
      qps: 25
      # Max number of burst queries to perform
      burst: 25
      # Log level. Allowed, info and debug
      log_level: info
      # Delete old namespaces for the selected workload before starting benchmark
      cleanup: true
      # Verify object creation
      verify_objects: true
      # Exit w/o indexing if a verify error happened
      error_on_verify: true
      # Prometheus step size
      step: 30s
      # kube-burner metrics profile
      metrics_profile: metrics.yaml
      # Remote configuration file
      # remote_config: http://yourdomain/kube-burner.yml
      # Remote metrics profile
      # remote_metrics_profile: http://yourdomain/metrics-profile.yml
      # kube-burner pod tolerations
      # Application to build
      #app: django
      #source_strat_env: PIP_INDEX_URL
      #source_strat_from: python
      #source_strat_from_version: latest
      # Script to run after build
      #post_commit_script: "./manage.py test"
      # Build Image name
      #build_image_stream: django-psql-example
      # Git url for application
      #git_url: https://github.com/sclorg/django-ex.git
      #build_image: image-registry.openshift-image-registry.svc:5000/svt-django/django-psql-example
      tolerations:
      - key: role
        value: workload
        effect: NoSchedule
      # Pod nodeSelector
      node_selector:
        key: node-role.kubernetes.io/worker
        value: