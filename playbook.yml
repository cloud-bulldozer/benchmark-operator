- hosts: localhost
  gather_facts: no
  tasks:
  - name: Get current state
    k8s_facts:
      api_version: ripsaw.cloudbulldozer.io/v1alpha1
      kind: Benchmark
      name: '{{ meta.name }}'
      namespace: '{{ operator_namespace }}'
    register: cr_state

  - name: Run Workload
    block:
    - include_role:
        name: "uuid"

    - name: Setting the uuid for the benchmark
      k8s_status:
        api_version: ripsaw.cloudbulldozer.io/v1alpha1
        kind: Benchmark
        name: "{{ meta.name }}"
        namespace: "{{ operator_namespace }}"
        status:
          uuid: "{{ uuid }}"

    - include_role:
        name: "uperf-bench"
      vars:
        uperf: "{{ workload.args }}"
      when: workload.name == "uperf"  and workload.args.pair > 0

    - include_role:
        name: "iperf3-bench"
      vars:
        iperf3: "{{ workload.args }}"
      when: workload.name == "iperf3" and workload.args.pairs > 0

    - include_role:
        name: sysbench
      vars:
        sysbench : "{{ workload.args }}"
      when: workload.name == "sysbench" and workload.args.enabled is defined and workload.args.enabled

    - include_role:
        name: "load-ycsb"
      vars:
        ycsb: "{{ workload.args }}"
      when: workload.name == "ycsb" and workload.args.workloads | length > 0

    - include_role:
        name: "ycsb-bench"
      vars:
        ycsb: "{{ workload.args }}"
      with_items: '{{ workload.args.workloads }}'
      when: workload.name == "ycsb" and workload.args.workloads | length > 0

    - include_role:
        name: "byowl"
      vars:
        byowl: "{{ workload.args }}"
      when: workload.name == "byowl" and workload.args.clients > 0

    - include_role:
        name: "fio-distributed"
      vars:
        fiod: "{{ workload.args }}"
      when: workload.name == "fio_distributed" and workload.args.servers > 0

    - include_role:
        name: "pgbench"
      vars:
        pgbench: "{{ workload.args }}"
      when: workload.name == "pgbench" and workload.args.clients > 0

    - include_role:
        name: "smallfile-bench"
      vars:
        smallfile: "{{ workload.args }}"
      when: workload.name == "smallfile" and workload.args.clients > 0


    when: workload is defined and cr_state.resources[0].status is not defined
